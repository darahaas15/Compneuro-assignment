{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[8]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ChannelBuild[0] managed KSChan[0]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("na", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("nahh1", 1, 1, 5, "na")}
{genprop.set_defstr(0, 0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(3)}
{tobj.set_state("m", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
0.1
-40
{tobj.transitions.object(0).set_f(0, 3, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
4
-0.055556
-65
{tobj.transitions.object(0).set_f(1, 2, tobj1)}
{tobj.end_restore()}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(1)}
{tobj.set_state("h", 1, 140, 110)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.07
-0.05
-65
{tobj.transitions.object(0).set_f(0, 2, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
-0.1
-35
{tobj.transitions.object(0).set_f(1, 4, tobj1)}
{tobj.end_restore()}
end_restore()
{genprop.set_single(0)}
{set_alias(0)}
{usetable(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[0] managed KSChan[0]", 156, 156, 192.6, 380.7)
}
objref ocbox_
//End ChannelBuild[0] managed KSChan[0]


//Begin ChannelBuild[1] managed KSChan[1]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("k", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("khh", 1, 1, 6, "k")}
{genprop.set_defstr(0.036, 0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(4)}
{tobj.set_state("n", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.1
-0.1
-10
{tobj.transitions.object(0).set_f(0, 3, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.125
0.0125
-0
{tobj.transitions.object(0).set_f(1, 2, tobj1)}
{tobj.end_restore()}
end_restore()
{genprop.set_single(0)}
{set_alias(0)}
{usetable(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[1] managed KSChan[1]", 1471, 98, 192.6, 341.1)
}
objref ocbox_
//End ChannelBuild[1] managed KSChan[1]


//Begin CellBuild[0]
{
load_file("celbild.hoc", "CellBuild")
}
{ocbox_ = new CellBuild(1)}
{object_push(ocbox_)}
{
version(5.7)
continuous = 1
}
{object_push(topol)}
{
first = 0
slist.remove_all()
sname = "dend"
objref tobj
}
{
tobj = new CellBuildSection("soma",0, 0, tobj, 0) slist.append(tobj)
  tobj.position(0,0,15,0) tobj.lx=7.69229 tobj.ly=-14.0621 tobj.i3d=0
all_init()
}
for i=0, slist.count-1 {slist.object(i).rdses()}
{object_pop()}
{
}
{object_push(subsets)}
{first = 0}
{ tobj = snlist.object(0)}
{consist()}
{object_pop()}
{
}
{object_push(geom)}
{
first = 0
tobj = new GeoSpec(4)
tobj.value = 100
bild.topol.slist.object(0).geo.append(tobj)
set_default()
}
{object_pop()}
{
}
{object_push(memb)}
{first=0}
{
tobj = new MechanismStandard("hh")
tobj.set("gnabar_hh", 0.12, 0)
tobj.set("gkbar_hh", 0.036, 0)
tobj.set("gl_hh", 0.0003, 0)
tobj.set("el_hh", -54.3, 0)
tobj = new MStanWrap(tobj, 1)
bild.topol.slist.object(0).ml.append(tobj)
}
{
tobj = new MechanismStandard("nahh1")
tobj.set("gmax_nahh1", 0, 0)
tobj = new MStanWrap(tobj, 1)
bild.topol.slist.object(0).ml.append(tobj)
}
{object_pop()}
{
}
{object_push(manage)}
{
first = 0
classname = "Cell"
etop=1 esub=1 egeom=1 emem=1
itop=1 isub=0 igeom=0 imem=0
bild.topol.names_off = 0
bild.topol.circles_off = 0
output_index = 0  output_x = 1
thresh = 10
}
{object_pop()}
{
cexport()
}
{object_pop()}
{
save_window_=ocbox_.gtopol
save_window_.size(-200,200,-150,150)
scene_vector_[2] = save_window_
ocbox_.gtopol = save_window_
save_window_.save_name("ocbox_.gtopol")
}
{
ocbox_.map("CellBuild[0]", 475, 62, 694.8, 398.7)
}
objref ocbox_
//End CellBuild[0]


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 1, 0)
ms[i].set("dur", 0.1, 0)
ms[i].set("amp", 0.1, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 858, 523, 207.9, 404.1)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 10
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 10
xvalue("t","t", 2 )
tstop = 10
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.00999999
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(151,541)
}
{
save_window_ = new Graph(0)
save_window_.size(0,10,-80,50)
scene_vector_[4] = save_window_
{save_window_.view(0, -80, 10, 130, 457, 559, 279, 223.3)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(-1,10,0,0.032)
scene_vector_[7] = save_window_
{save_window_.view(-1, 0, 11, 0.032, 1219, 576, 293.4, 193.6)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addvar("soma.gk_hh( 0.5 )", 2, 0, 0.8, 0.9, 2)
save_window_.addvar("soma.gna_hh( 0.5 )", 3, 0, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
